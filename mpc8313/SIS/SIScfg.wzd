###########################################################################
##
##                         Wizard File for SIS V2
##
##  SIS source code will be generated by means of these definitions for:
##  - tasks
##  - error handling
##  - mailboxes
##  - memory pools
##  - events
##
##  Pay Attention to all marked sections. The marked sections are framed with:
##
##  //****************************
##  // important implemention hint
##  //****************************
##
############################################################################
############################################################################


// Task definition:
// Remark: higher priority tasks at the top !
// TASK( <hdl>,     <function>  )
// Mailbox definition:
// MBOX( <rx-task-hdl>, <number-of-entries>, [<tx-task-hdl>, ...] )

TASK( CTL_TSK,        CTL_Task )

//******************************************************************
// insert SLS- and SLD-task-handles as tx-task-handles to CTL_TSK
//******************************************************************
MBOX( CTL_TSK,  10, MNT_TSK, SLS_TSK,SLD_TSK)
//***********************************************
// SLV_DelayTask-definition
//***********************************************
TASK( SLD_TSK,      SLV_DelayTask )

//******************************************************************
// one message box for the slave delay task - 10 entries recommended
//******************************************************************
MBOX( SLD_TSK,  10 )

//***********************************************
//  SLV_SyncTask-definition
//***********************************************
TASK( SLS_TSK,        SLV_SyncTask )
TASK( SLSintTmo_TSK,  SLV_SyncTask )
TASK( SLSrcvTmo_TSK,  SLV_SyncTask )

//******************************************************************
// one message box for the slave sync task - 10 entries recommended
//******************************************************************
MBOX( SLS_TSK      , 10 )
MBOX( SLSintTmo_TSK,  1 )
MBOX( SLSrcvTmo_TSK,  1 )




//***********************************************
// one MSTsyn_Task-definition for each channel
// enumerate the tasks with the handles
// MAS1_TSK , MAS2_TSK ,..., MASn_TSK
// in ascending order
//***********************************************
TASK( MAS1_TSK,       MSTsyn_Task )
MBOX( MAS1_TSK, 10 )
TASK( MAS2_TSK,       MSTsyn_Task )
MBOX( MAS2_TSK, 10 )


//***********************************************
// one MSTdel_Task-definition for each channel
// enumerate the tasks with the handles
// MAD1_TSK , MAD2_TSK ,..., MADn_TSK
// in ascending order
//***********************************************
TASK( MAD1_TSK,       MSTdel_Task )
MBOX( MAD1_TSK, 10 )
TASK( MAD2_TSK,       MSTdel_Task )
MBOX( MAD2_TSK, 10 )


//***********************************************
// one MSTdel_Task-definition for each channel
// enumerate the tasks with the handles
// MAD1_TSK , MAD2_TSK ,..., MADn_TSK
// in ascending order
//***********************************************
TASK( MAA1_TSK,       MSTannc_Task )
MBOX( MAA1_TSK, 10 )
TASK( MAA2_TSK,       MSTannc_Task )
MBOX( MAA2_TSK, 10 )




//***********************************************
// one mandatory management task for one node
//***********************************************
TASK( MNT_TSK,      MNT_Task )

//******************************************************************
// one message box for the management task - 10 entries recommended
//******************************************************************
MBOX( MNT_TSK,   10 )

//***********************************************
// UCM task definitions for the node
// just used in unicast capable clocks
//***********************************************
TASK( UCMann_TSK,        UCMann_Task )
TASK( UCMsyn_TSK,        UCMsyn_Task )
TASK( UCMdel_TSK,        UCMdel_Task )

//***********************************************
// UCD task definition for the node
// just used in unicast capable clocks
//***********************************************
TASK( UCD_TSK,           UCD_Task )

//******************************************************************
// one message box for the unicast announce task - 3 entries recommended
//******************************************************************
MBOX( UCMann_TSK,   3 )

//******************************************************************
// one message box for the unicast sync task
// - 3 entries recommended
//******************************************************************
MBOX( UCMsyn_TSK,   3 )

//******************************************************************
// one message box for the unicast delay request task
// - 3 entries recommended
//******************************************************************
MBOX( UCMdel_TSK,   3 )

//******************************************************************
// one message box for the unicast discovery task
// - 10 entries recommended
//******************************************************************
MBOX( UCD_TSK,   1 )

//***********************************************
// three mandatory dispatcher tasks for one node
//***********************************************
TASK( DIS_TSK,      DIS_Task )
TASK( DISnet_TSK,   DISnet_Task )
TASK( DISlat_TSK,   DISnet_Task )

//******************************************************************
// one message box for the dispatcher task - 20 entries recommended
//******************************************************************
MBOX( DIS_TSK,   20 )
MBOX( DISnet_TSK, 1)
MBOX( DISlat_TSK, 1)

// Memory definition:
// POOL( <pool-hdl>, [PUBL/PRIV],<number-of-entries>, <size> )

//******************************************************************
// pool for memory up to 64 byte
//******************************************************************
POOL( k_POOL_64, PUBL, 21, 64)

//******************************************************************
// pool for memory up to 128 byte
//******************************************************************
POOL( k_POOL_128, PUBL, 14, 128)

//******************************************************************
// pool for memory up to 256 byte
//******************************************************************
POOL( k_POOL_256, PUBL, 12, 256)

//******************************************************************
// pool for memory up to 1536 byte
//******************************************************************
POOL( k_POOL_1536, PUBL, 2, 1536)

// Event Definitions
// EVENT( <task-hdl>, <event> )
EVENT(CTL_TSK,k_EV_INIT,k_EV_SYN_TMT,k_EV_SC_SLV,k_EV_SC_PSV,k_EV_SC_MST,k_EV_SC_FLT,k_EV_SC_DSBL,k_EV_SC_ENBL,k_EV_SETPREF,k_EV_CLRPREF,k_EV_DONE,k_EV_SYNC,k_EV_FLT_CLRD)
